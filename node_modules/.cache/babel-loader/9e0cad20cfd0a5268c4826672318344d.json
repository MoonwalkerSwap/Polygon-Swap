{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/warrenmason/Documents/MoonWalkerSwap/FINAL/MoonWalkerSwap-Interface-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  &::after {\\n    display: inline-block;\\n    animation: ellipsis 1.25s infinite;\\n    content: '.';\\n    width: 1em;\\n    text-align: left;\\n  }\\n  @keyframes ellipsis {\\n    0% {\\n      content: '.';\\n    }\\n    33% {\\n      content: '..';\\n    }\\n    66% {\\n      content: '...';\\n    }\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  :hover {\\n    cursor: pointer;\\n  }\\n  color: \",\";\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  position: relative;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{Text}from'moonwalkerswap-uikit';import styled from'styled-components';export var Wrapper=styled.div(_templateObject());export var ClickableText=styled(Text)(_templateObject2(),function(_ref){var theme=_ref.theme;return theme.colors.primary;});export var Dots=styled.span(_templateObject3());","map":{"version":3,"sources":["/Users/warrenmason/Documents/MoonWalkerSwap/FINAL/MoonWalkerSwap-Interface-new/src/pages/Pool/styleds.tsx"],"names":["Text","styled","Wrapper","div","ClickableText","theme","colors","primary","Dots","span"],"mappings":"2+BAAA,OAASA,IAAT,KAAqB,sBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGD,MAAM,CAACE,GAAV,mBAAb,CAIP,MAAO,IAAMC,CAAAA,aAAa,CAAGH,MAAM,CAACD,IAAD,CAAT,oBAIf,kBAAGK,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,OAA5B,EAJe,CAAnB,CAOP,MAAO,IAAMC,CAAAA,IAAI,CAAGP,MAAM,CAACQ,IAAV,oBAAV","sourcesContent":["import { Text } from 'moonwalkerswap-uikit'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}