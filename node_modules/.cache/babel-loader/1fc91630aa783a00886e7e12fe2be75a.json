{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\n\nconst codegen_1 = require(\"../compile/codegen\");\n\nconst util_1 = require(\"../compile/util\");\n\nconst names_1 = require(\"../compile/names\");\n\nfunction checkReportMissingProp(cxt, prop) {\n  const {\n    gen,\n    data,\n    it\n  } = cxt;\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({\n      missingProperty: codegen_1._`${prop}`\n    }, true);\n    cxt.error();\n  });\n}\n\nexports.checkReportMissingProp = checkReportMissingProp;\n\nfunction checkMissingProp({\n  gen,\n  data,\n  it: {\n    opts\n  }\n}, properties, missing) {\n  return codegen_1.or(...properties.map(prop => codegen_1.and(noPropertyInData(gen, data, prop, opts.ownProperties), codegen_1._`${missing} = ${prop}`)));\n}\n\nexports.checkMissingProp = checkMissingProp;\n\nfunction reportMissingProp(cxt, missing) {\n  cxt.setParams({\n    missingProperty: missing\n  }, true);\n  cxt.error();\n}\n\nexports.reportMissingProp = reportMissingProp;\n\nfunction hasPropFunc(gen) {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: codegen_1._`Object.prototype.hasOwnProperty`\n  });\n}\n\nexports.hasPropFunc = hasPropFunc;\n\nfunction isOwnProperty(gen, data, property) {\n  return codegen_1._`${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\n\nexports.isOwnProperty = isOwnProperty;\n\nfunction propertyInData(gen, data, property, ownProperties) {\n  const cond = codegen_1._`${data}${codegen_1.getProperty(property)} !== undefined`;\n  return ownProperties ? codegen_1._`${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\n\nexports.propertyInData = propertyInData;\n\nfunction noPropertyInData(gen, data, property, ownProperties) {\n  const cond = codegen_1._`${data}${codegen_1.getProperty(property)} === undefined`;\n  return ownProperties ? codegen_1.or(cond, codegen_1.not(isOwnProperty(gen, data, property))) : cond;\n}\n\nexports.noPropertyInData = noPropertyInData;\n\nfunction allSchemaProperties(schemaMap) {\n  return schemaMap ? Object.keys(schemaMap).filter(p => p !== \"__proto__\") : [];\n}\n\nexports.allSchemaProperties = allSchemaProperties;\n\nfunction schemaProperties(it, schemaMap) {\n  return allSchemaProperties(schemaMap).filter(p => !util_1.alwaysValidSchema(it, schemaMap[p]));\n}\n\nexports.schemaProperties = schemaProperties;\n\nfunction callValidateCode({\n  schemaCode,\n  data,\n  it: {\n    gen,\n    topSchemaRef,\n    schemaPath,\n    errorPath\n  },\n  it\n}, func, context, passSchema) {\n  const dataAndSchema = passSchema ? codegen_1._`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n  const valCxt = [[names_1.default.instancePath, codegen_1.strConcat(names_1.default.instancePath, errorPath)], [names_1.default.parentData, it.parentData], [names_1.default.parentDataProperty, it.parentDataProperty], [names_1.default.rootData, names_1.default.rootData]];\n  if (it.opts.dynamicRef) valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n  const args = codegen_1._`${dataAndSchema}, ${gen.object(...valCxt)}`;\n  return context !== codegen_1.nil ? codegen_1._`${func}.call(${context}, ${args})` : codegen_1._`${func}(${args})`;\n}\n\nexports.callValidateCode = callValidateCode;\n\nfunction usePattern({\n  gen,\n  it: {\n    opts\n  }\n}, pattern) {\n  const u = opts.unicodeRegExp ? \"u\" : \"\";\n  return gen.scopeValue(\"pattern\", {\n    key: pattern,\n    ref: new RegExp(pattern, u),\n    code: codegen_1._`new RegExp(${pattern}, ${u})`\n  });\n}\n\nexports.usePattern = usePattern;\n\nfunction validateArray(cxt) {\n  const {\n    gen,\n    data,\n    keyword,\n    it\n  } = cxt;\n  const valid = gen.name(\"valid\");\n\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true);\n    validateItems(() => gen.assign(validArr, false));\n    return validArr;\n  }\n\n  gen.var(valid, true);\n  validateItems(() => gen.break());\n  return valid;\n\n  function validateItems(notValid) {\n    const len = gen.const(\"len\", codegen_1._`${data}.length`);\n    gen.forRange(\"i\", 0, len, i => {\n      cxt.subschema({\n        keyword,\n        dataProp: i,\n        dataPropType: util_1.Type.Num\n      }, valid);\n      gen.if(codegen_1.not(valid), notValid);\n    });\n  }\n}\n\nexports.validateArray = validateArray;\n\nfunction validateUnion(cxt) {\n  const {\n    gen,\n    schema,\n    keyword,\n    it\n  } = cxt;\n  /* istanbul ignore if */\n\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\");\n  const alwaysValid = schema.some(sch => util_1.alwaysValidSchema(it, sch));\n  if (alwaysValid && !it.opts.unevaluated) return;\n  const valid = gen.let(\"valid\", false);\n  const schValid = gen.name(\"_valid\");\n  gen.block(() => schema.forEach((_sch, i) => {\n    const schCxt = cxt.subschema({\n      keyword,\n      schemaProp: i,\n      compositeRule: true\n    }, schValid);\n    gen.assign(valid, codegen_1._`${valid} || ${schValid}`);\n    const merged = cxt.mergeValidEvaluated(schCxt, schValid); // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n    // or if all properties and items were evaluated (it.props === true && it.items === true)\n\n    if (!merged) gen.if(codegen_1.not(valid));\n  }));\n  cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\n\nexports.validateUnion = validateUnion;","map":{"version":3,"sources":["../../lib/vocabularies/code.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: codegen_1._ `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return codegen_1.or(...properties.map((prop) => codegen_1.and(noPropertyInData(gen, data, prop, opts.ownProperties), codegen_1._ `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: codegen_1._ `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return codegen_1._ `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = codegen_1._ `${data}${codegen_1.getProperty(property)} !== undefined`;\n    return ownProperties ? codegen_1._ `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = codegen_1._ `${data}${codegen_1.getProperty(property)} === undefined`;\n    return ownProperties ? codegen_1.or(cond, codegen_1.not(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !util_1.alwaysValidSchema(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? codegen_1._ `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, codegen_1.strConcat(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = codegen_1._ `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? codegen_1._ `${func}.call(${context}, ${args})` : codegen_1._ `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    return gen.scopeValue(\"pattern\", {\n        key: pattern,\n        ref: new RegExp(pattern, u),\n        code: codegen_1._ `new RegExp(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", codegen_1._ `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if(codegen_1.not(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => util_1.alwaysValidSchema(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, codegen_1._ `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if(codegen_1.not(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map"]},"metadata":{},"sourceType":"script"}