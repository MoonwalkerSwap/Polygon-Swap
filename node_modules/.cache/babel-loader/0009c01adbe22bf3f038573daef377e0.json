{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst util_1 = require(\"../../compile/util\");\n\nconst code_1 = require(\"../code\");\n\nconst additionalItems_1 = require(\"./additionalItems\");\n\nconst error = {\n  message: ({\n    params: {\n      len\n    }\n  }) => codegen_1.str`must NOT have more than ${len} items`,\n  params: ({\n    params: {\n      len\n    }\n  }) => codegen_1._`{limit: ${len}}`\n};\nconst def = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n\n  code(cxt) {\n    const {\n      schema,\n      parentSchema,\n      it\n    } = cxt;\n    const {\n      prefixItems\n    } = parentSchema;\n    it.items = true;\n    if (util_1.alwaysValidSchema(it, schema)) return;\n    if (prefixItems) additionalItems_1.validateAdditionalItems(cxt, prefixItems);else cxt.ok(code_1.validateArray(cxt));\n  }\n\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/applicator/items2020.ts"],"names":[],"mappings":";;;;;;AAOA,MAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAIA,MAAM,KAAK,GAA2B;AACpC,EAAA,OAAO,EAAE,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA;AAAD;AAAT,GAAD,KAAqB,SAAA,CAAA,GAAG,2BAA2B,GAAG,QAD3B;AAEpC,EAAA,MAAM,EAAE,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA;AAAD;AAAT,GAAD,KAAqB,SAAA,CAAA,CAAC,WAAW,GAAG;AAFR,CAAtC;AAKA,MAAM,GAAG,GAA0B;AACjC,EAAA,OAAO,EAAE,OADwB;AAEjC,EAAA,IAAI,EAAE,OAF2B;AAGjC,EAAA,UAAU,EAAE,CAAC,QAAD,EAAW,SAAX,CAHqB;AAIjC,EAAA,MAAM,EAAE,aAJyB;AAKjC,EAAA,KALiC;;AAMjC,EAAA,IAAI,CAAC,GAAD,EAAgB;AAClB,UAAM;AAAC,MAAA,MAAD;AAAS,MAAA,YAAT;AAAuB,MAAA;AAAvB,QAA6B,GAAnC;AACA,UAAM;AAAC,MAAA;AAAD,QAAgB,YAAtB;AACA,IAAA,EAAE,CAAC,KAAH,GAAW,IAAX;AACA,QAAI,MAAA,CAAA,iBAAA,CAAkB,EAAlB,EAAsB,MAAtB,CAAJ,EAAmC;AACnC,QAAI,WAAJ,EAAiB,iBAAA,CAAA,uBAAA,CAAwB,GAAxB,EAA6B,WAA7B,EAAjB,KACK,GAAG,CAAC,EAAJ,CAAO,MAAA,CAAA,aAAA,CAAc,GAAd,CAAP;AACN;;AAbgC,CAAnC;AAgBA,OAAA,CAAA,OAAA,GAAe,GAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => codegen_1.str `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => codegen_1._ `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if (util_1.alwaysValidSchema(it, schema))\n            return;\n        if (prefixItems)\n            additionalItems_1.validateAdditionalItems(cxt, prefixItems);\n        else\n            cxt.ok(code_1.validateArray(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map"]},"metadata":{},"sourceType":"script"}