{"ast":null,"code":"import _objectSpread from\"/Users/warrenmason/Documents/MoonWalkerSwap/FINAL/MoonWalkerSwap-Interface-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import{Menu as UikitMenu}from'moonwalkerswap-uikit';import{useWeb3React}from'@web3-react/core';import{allLanguages}from'constants/localisation/languageCodes';import{LanguageContext}from'hooks/LanguageContext';import useTheme from'hooks/useTheme';import useGetPriceData from'hooks/useGetPriceData';import useGetLocalProfile from'hooks/useGetLocalProfile';import useAuth from'hooks/useAuth';import links from'./config';var Menu=function Menu(props){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useAuth=useAuth(),login=_useAuth.login,logout=_useAuth.logout;var _useContext=useContext(LanguageContext),selectedLanguage=_useContext.selectedLanguage,setSelectedLanguage=_useContext.setSelectedLanguage;var _useTheme=useTheme(),isDark=_useTheme.isDark,toggleTheme=_useTheme.toggleTheme;var priceData=useGetPriceData();var dustPriceUsd=priceData?Number(priceData.prices.Dust):undefined;var profile=useGetLocalProfile();return/*#__PURE__*/_jsx(UikitMenu,_objectSpread({links:links,account:account,login:login,logout:logout,isDark:isDark,toggleTheme:toggleTheme,currentLang:(selectedLanguage===null||selectedLanguage===void 0?void 0:selectedLanguage.code)||'',langs:allLanguages,setLang:setSelectedLanguage,dustPriceUsd:dustPriceUsd,profile:profile},props));};export default Menu;","map":{"version":3,"sources":["/Users/warrenmason/Documents/MoonWalkerSwap/FINAL/MoonWalkerSwap-Interface-new/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useGetPriceData","useGetLocalProfile","useAuth","links","props","account","login","logout","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","priceData","dustPriceUsd","Number","prices","Dust","undefined","profile","code"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAI,GAAIC,CAAAA,SAAjB,KAAiC,sBAAjC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,YAAT,KAA6B,sCAA7B,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,0BAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAEA,GAAMT,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,CAACU,KAAD,CAAW,mBACZR,YAAY,EADA,CACxBS,OADwB,eACxBA,OADwB,cAENH,OAAO,EAFD,CAExBI,KAFwB,UAExBA,KAFwB,CAEjBC,MAFiB,UAEjBA,MAFiB,iBAGkBd,UAAU,CAACK,eAAD,CAH5B,CAGxBU,gBAHwB,aAGxBA,gBAHwB,CAGNC,mBAHM,aAGNA,mBAHM,eAIAV,QAAQ,EAJR,CAIxBW,MAJwB,WAIxBA,MAJwB,CAIhBC,WAJgB,WAIhBA,WAJgB,CAKhC,GAAMC,CAAAA,SAAS,CAAGZ,eAAe,EAAjC,CACA,GAAMa,CAAAA,YAAY,CAAGD,SAAS,CAAGE,MAAM,CAACF,SAAS,CAACG,MAAV,CAAiBC,IAAlB,CAAT,CAAmCC,SAAjE,CACA,GAAMC,CAAAA,OAAO,CAAGjB,kBAAkB,EAAlC,CAEA,mBACE,KAAC,SAAD,gBACE,KAAK,CAAEE,KADT,CAEE,OAAO,CAAEE,OAFX,CAGE,KAAK,CAAEC,KAHT,CAIE,MAAM,CAAEC,MAJV,CAKE,MAAM,CAAEG,MALV,CAME,WAAW,CAAEC,WANf,CAOE,WAAW,CAAE,CAAAH,gBAAgB,OAAhB,EAAAA,gBAAgB,SAAhB,QAAAA,gBAAgB,CAAEW,IAAlB,GAA0B,EAPzC,CAQE,KAAK,CAAEtB,YART,CASE,OAAO,CAAEY,mBATX,CAUE,YAAY,CAAEI,YAVhB,CAWE,OAAO,CAAEK,OAXX,EAYMd,KAZN,EADF,CAgBD,CAzBD,CA2BA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu} from 'moonwalkerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'constants/localisation/languageCodes'\nimport { LanguageContext } from 'hooks/LanguageContext'\nimport useTheme from 'hooks/useTheme'\nimport useGetPriceData from 'hooks/useGetPriceData'\nimport useGetLocalProfile from 'hooks/useGetLocalProfile'\nimport useAuth from 'hooks/useAuth'\nimport links from './config'\n\nconst Menu: React.FC = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const priceData = useGetPriceData()\n  const dustPriceUsd = priceData ? Number(priceData.prices.Dust) : undefined\n  const profile = useGetLocalProfile()\n\n  return (\n    <UikitMenu\n      links={links}\n      account={account as string}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage?.code || ''}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      dustPriceUsd={dustPriceUsd}\n      profile={profile}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}